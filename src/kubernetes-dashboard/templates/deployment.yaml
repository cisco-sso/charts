apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "kubernetes-dashboard.fullname" . }}
  labels:
    app: {{ template "kubernetes-dashboard.name" . }}
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    kubernetes.io/cluster-service: "true"
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "kubernetes-dashboard.name" . }}
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: {{ template "kubernetes-dashboard.serviceAccountName" . }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
      containers:
      - name: main
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        ports:
        - name: http
          containerPort: 9090
          protocol: TCP
{{/*
The following "tolerations" and "affinity" code is based on:
  - https://github.com/samsung-cnct/k2-charts/blob/master/kibana/templates/kibana.yaml
*/}}
{{- if .Values.tolerations }}
      tolerations:
  {{- range .Values.tolerations }}
      - key: {{ .key | default ("") }}
        value: {{ .value | default ("")}}
        operator: {{ .operator | default ("Equal") }}
        effect: {{ .effect  | default ("")}}
  {{- end }}
{{- end }}
{{- if .Values.antiAffinity.enabled }}
      affinity:
        podAntiAffinity:
  {{- $antiAffinityType := .Values.antiAffinity.type | lower -}}
  {{- if eq $antiAffinityType "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  name: {{ template "kubernetes-dashboard.fullname" . }}
  {{- else if eq $antiAffinityType "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    name: {{ template "kubernetes-dashboard.fullname" . }}
  {{- end }}
{{- end }}
